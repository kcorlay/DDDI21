select(-BCTCB2010)
#Recoded OBJECTID to begin at 1 instead of 9601 using subtraction.
Wifi <- Wifi %>%
arrange(OBJECTID) %>%
mutate(OBJECTID = (OBJECTID - 9600))
#check to see if Borocode and Borough are the same variable. Since the sum returned as 0, they are equal.
bouroughcodeyes <- ifelse(Wifi$Borough == Wifi$BoroCode, 0, 1)
sum(bouroughcodeyes)
#Removed Borocode due to being same data as Borough
Wifi <- Wifi %>%
select(-BoroCode)
Manhattan <- Original.Data %>%
filter(City != `Borough Name`) %>%
select(City, `Borough Name`, `Neighborhood Tabulation Area (NTA)`, OBJECTID) %>%
filter(`Borough Name` == "Manhattan") %>%
filter(City != "New York")
brooklyn <- Wifi %>%
filter(City != `Borough Name`) %>%
select(City, `Borough Name`, `Neighborhood Tabulation Area Code (NTACODE)`) %>%
filter(`Borough Name` == "Brooklyn")
brooklyn
Staten_Island <- Wifi %>%
filter(City != `Borough Name`) %>%
select(City, `Borough Name`, `Neighborhood Tabulation Area Code (NTACODE)`) %>%
filter(`Borough Name` == "Staten Island")
Staten_Island
Bronx <- Wifi %>%
filter(City != `Borough Name`) %>%
select(City, `Borough Name`, `Neighborhood Tabulation Area Code (NTACODE)`) %>%
filter(`Borough Name` == "Bronx")
Bronx
Manhattan <- Wifi %>%
filter(City != `Borough Name`) %>%
select(City, `Borough Name`, `Neighborhood Tabulation Area (NTA)`, OBJECTID) %>%
filter(`Borough Name` == "Manhattan") %>%
filter(City != "New York")
Manhattan
View(Original.Data)
Wifi <- Wifi %>%
arrange(OBJECTID) %>%
mutate(OBJECTID = (OBJECTID - 9600))
#Initial packages and loading of original data file using readr.
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lubridate)
library(naniar)
Original.Data <- read_csv("NYC_Wi-Fi_Hotspot_Locations.csv")
Wifi <- Original.Data
#Code used to find variable names and the amount of rows and columns.
colnames(Wifi)
ncol(Wifi)
nrow(Wifi)
#Renaming variable due to spelling error
colnames(Wifi)[21] <- "Council District"
#Creating Data Table of variables and renaming columns
Document.variables <- data.frame(colnames(Wifi), "Definition")
colnames(Document.variables)[1] <- "Variable"
colnames(Document.variables)[2] <- "Definition"
#Recoding definitions per NYC Open Data
Document.variables[1, 2] <- "Identification number automatically generated by map software ArcMap."
Document.variables[2, 2] <- "Borough of New York City. MN = Manhattan BX = Bronx BK = Brooklyn QU = Queens SI = Staten Island."
Document.variables[3, 2] <- "Type of WiFi provided by franchise."
Document.variables[4, 2] <- "Franchise who is providing the Wifi connection."
Document.variables[5, 2] <- "The name of the location where the WiFi is located."
Document.variables[6, 2] <- "A brief description of where the WiFi point is."
Document.variables[7, 2] <- "Points that fall North or South of the Equator, expressed in degrees."
Document.variables[8, 2] <- "Points that fall East or West of the Prime Meridian, expressed in degrees."
Document.variables[9, 2] <- "A horizontal value where a point is located."
Document.variables[10, 2] <- "A vertical value where a point is located."
Document.variables[11, 2] <- "The type of location that a WiFi hotspot is present in."
Document.variables[12, 2] <- "Comments describing a specific hotspot or location."
Document.variables[13, 2] <- "The city in which a hotspot is located."
Document.variables[14, 2] <- "The name of the WiFi seen on people's devices."
Document.variables[15, 2] <- "A LinkNYC Kiosk's unique identification number."
Document.variables[16, 2] <- "The approximated date that this Wi-Fi site went active."
Document.variables[17, 2] <- "The New York City borough where the hotspots are located."
Document.variables[18, 2] <- "The New York City borough where the hotspots are located."
Document.variables[19, 2] <- "Four (4) digit code assigned to neighborhoods to differentiate NYC's five boroughs."
Document.variables[20, 2] <- "Neighborhood identifiers to differentiate NYC's five boroughs."
Document.variables[21, 2] <- "NYC City Council District number."
Document.variables[22, 2] <- "United States Postal Service Zip Code (5-digits)."
Document.variables[23, 2] <- "New York City Borough plus Community Board Numbers."
Document.variables[24, 2] <- "2010 U.S. Census data based on location."
Document.variables[25, 2] <- "Combined value of Borough CD and Census 2010."
Document.variables[26, 2] <- "Building Identification Number."
Document.variables[27, 2] <- "Borough Block Lot."
Document.variables[28, 2] <- "Identification number automatically generated by GIS Developer map sites."
Document.variables[29, 2] <- "Combination of the lat and long values."
#Final paged output
rmarkdown::paged_table(Document.variables)
#Initial packages and loading of original data file using readr.
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lubridate)
library(naniar)
Original.Data <- read_csv("NYC_Wi-Fi_Hotspot_Locations.csv")
Wifi <- Original.Data
#Code used to find variable names and the amount of rows and columns.
colnames(Wifi)
ncol(Wifi)
nrow(Wifi)
#Renaming variable due to spelling error
colnames(Wifi)[21] <- "Council District"
#Creating Data Table of variables and renaming columns
Document.variables <- data.frame(colnames(Wifi), "Definition")
colnames(Document.variables)[1] <- "Variable"
colnames(Document.variables)[2] <- "Definition"
#Recoding definitions per NYC Open Data
Document.variables[1, 2] <- "Identification number automatically generated by map software ArcMap."
Document.variables[2, 2] <- "Borough of New York City. MN = Manhattan BX = Bronx BK = Brooklyn QU = Queens SI = Staten Island."
Document.variables[3, 2] <- "Type of WiFi provided by franchise."
Document.variables[4, 2] <- "Franchise who is providing the Wifi connection."
Document.variables[5, 2] <- "The name of the location where the WiFi is located."
Document.variables[6, 2] <- "A brief description of where the WiFi point is."
Document.variables[7, 2] <- "Points that fall North or South of the Equator, expressed in degrees."
Document.variables[8, 2] <- "Points that fall East or West of the Prime Meridian, expressed in degrees."
Document.variables[9, 2] <- "A horizontal value where a point is located."
Document.variables[10, 2] <- "A vertical value where a point is located."
Document.variables[11, 2] <- "The type of location that a WiFi hotspot is present in."
Document.variables[12, 2] <- "Comments describing a specific hotspot or location."
Document.variables[13, 2] <- "The city in which a hotspot is located."
Document.variables[14, 2] <- "The name of the WiFi seen on people's devices."
Document.variables[15, 2] <- "A LinkNYC Kiosk's unique identification number."
Document.variables[16, 2] <- "The approximated date that this Wi-Fi site went active."
Document.variables[17, 2] <- "The New York City borough where the hotspots are located."
Document.variables[18, 2] <- "The New York City borough where the hotspots are located."
Document.variables[19, 2] <- "Four (4) digit code assigned to neighborhoods to differentiate NYC's five boroughs."
Document.variables[20, 2] <- "Neighborhood identifiers to differentiate NYC's five boroughs."
Document.variables[21, 2] <- "NYC City Council District number."
Document.variables[22, 2] <- "United States Postal Service Zip Code (5-digits)."
Document.variables[23, 2] <- "New York City Borough plus Community Board Numbers."
Document.variables[24, 2] <- "2010 U.S. Census data based on location."
Document.variables[25, 2] <- "Combined value of Borough CD and Census 2010."
Document.variables[26, 2] <- "Building Identification Number."
Document.variables[27, 2] <- "Borough Block Lot."
Document.variables[28, 2] <- "Identification number automatically generated by GIS Developer map sites."
Document.variables[29, 2] <- "Combination of the lat and long values."
#Final paged output
rmarkdown::paged_table(Document.variables)
#Recoding values as NA for several variables
Wifi <- Wifi %>%
naniar::replace_with_na(replace = list(BBL = 0,
Activated = "09/09/9999",
BIN = 0,
Name = 0,
SourceID = 0))
#Binary flags for every variable based on missing data using ifelse statement. A missing (NA) observation will appear as a 1.
Wifi$BF_OBJECTID <- ifelse(is.na(Wifi$OBJECTID) == TRUE, 1, 0)
Wifi$BF_Provider <- ifelse(is.na(Wifi$Provider) == TRUE, 1, 0)
Wifi$BF_Latitude <- ifelse(is.na(Wifi$Latitude) == TRUE, 1, 0)
Wifi$BF_Y <- ifelse(is.na(Wifi$Y) == TRUE, 1, 0)
Wifi$BF_City <- ifelse(is.na(Wifi$City) == TRUE, 1, 0)
Wifi$BF_Activated <- ifelse(is.na(Wifi$Activated) == TRUE, 1, 0)
Wifi$"BF_Neighborhood Tabulation Area Code (NTACODE)" <-
ifelse(is.na(Wifi$"Neighborhood Tabulation Area Code (NTACODE)") == TRUE, 1, 0)
Wifi$BF_Postcode <- ifelse(is.na(Wifi$Postcode) == TRUE, 1, 0)
Wifi$BF_BCTCB2010 <- ifelse(is.na(Wifi$BCTCB2010) == TRUE, 1, 0)
Wifi$BF_DOITT_ID <- ifelse(is.na(Wifi$DOITT_ID) == TRUE, 1, 0)
Wifi$BF_Borough <- ifelse(is.na(Wifi$Borough) == TRUE, 1, 0)
Wifi$BF_Name <- ifelse(is.na(Wifi$Name) == TRUE, 1, 0)
Wifi$BF_Longitude <- ifelse(is.na(Wifi$Longitude) == TRUE, 1, 0)
Wifi$BF_Location_T <- ifelse(is.na(Wifi$Location_T) == TRUE, 1, 0)
Wifi$BF_SSID <- ifelse(is.na(Wifi$SSID) == TRUE, 1, 0)
Wifi$BF_BoroCode <- ifelse(is.na(Wifi$BoroCode) == TRUE, 1, 0)
Wifi$"BF_Neighborhood Tabulation Area (NTA)" <-
ifelse(is.na(Wifi$"Neighborhood Tabulation Area (NTA)") == TRUE, 1, 0)
Wifi$BF_BoroCD <- ifelse(is.na(Wifi$BoroCD) == TRUE, 1, 0)
Wifi$BF_BIN <- ifelse(is.na(Wifi$BIN) == TRUE, 1, 0)
Wifi$"BF_Location (Lat, Long)" <- ifelse(is.na(Wifi$"Location (Lat, Long)") == TRUE, 1, 0)
Wifi$BF_Type <- ifelse(is.na(Wifi$Type) == TRUE, 1, 0)
Wifi$BF_Location <- ifelse(is.na(Wifi$Location) == TRUE, 1, 0)
Wifi$BF_X <- ifelse(is.na(Wifi$X) == TRUE, 1, 0)
Wifi$BF_Remarks <- ifelse(is.na(Wifi$Remarks) == TRUE, 1, 0)
Wifi$BF_SourceID <- ifelse(is.na(Wifi$SourceID) == TRUE, 1, 0)
Wifi$"BF_Borough Name" <- ifelse(is.na(Wifi$"Borough Name") == TRUE, 1, 0)
Wifi$"BF_Council District" <- ifelse(is.na(Wifi$"Council District") == TRUE, 1, 0)
Wifi$"BF_Census Tract" <- ifelse(is.na(Wifi$"Census Tract") == TRUE, 1, 0)
Wifi$BF_BBL <- ifelse(is.na(Wifi$BBL) == TRUE, 1, 0)
#Identifying specific variables with missing data using sums. If the sum is greater than 0 than that row has missing data.
sum(Wifi$BF_OBJECTID)
sum(Wifi$BF_Provider)
sum(Wifi$BF_Latitude)
sum(Wifi$BF_Y)
sum(Wifi$BF_City)
sum(Wifi$BF_Activated)
sum(Wifi$"BF_Neighborhood Tabulation Area Code (NTACODE)")
sum(Wifi$BF_Postcode)
sum(Wifi$BF_BCTCB2010)
sum(Wifi$BF_DOITT_ID)
sum(Wifi$BF_Borough)
sum(Wifi$BF_Name)
sum(Wifi$BF_Longitude)
sum(Wifi$BF_Location_T)
sum(Wifi$BF_SSID)
sum(Wifi$BF_BoroCode)
sum(Wifi$"BF_Neighborhood Tabulation Area (NTA)")
sum(Wifi$BF_BoroCD)
sum(Wifi$BF_BIN)
sum(Wifi$"BF_Location (Lat, Long)")
sum(Wifi$BF_Type)
sum(Wifi$BF_Location)
sum(Wifi$BF_Remarks)
sum(Wifi$BF_X)
sum(Wifi$BF_SourceID)
sum(Wifi$"BF_Borough Name")
sum(Wifi$"BF_Council District")
sum(Wifi$"BF_Census Tract")
sum(Wifi$BF_BBL)
#Removing binary flags for variables with no missing data
Wifi <- Wifi %>%
select(-BF_OBJECTID,
-BF_Provider,
-BF_Latitude,
-BF_Y,
-BF_City,
-"BF_Neighborhood Tabulation Area Code (NTACODE)",
-BF_Postcode,
-BF_BCTCB2010,
-BF_DOITT_ID,
-BF_Borough,
-BF_Longitude,
-BF_Location_T,
-BF_SSID,
-BF_BoroCode,
-"BF_Neighborhood Tabulation Area (NTA)",
-BF_BoroCD,
-"BF_Location (Lat, Long)",
-BF_Type,
-BF_Location,
-BF_X,
-"BF_Borough Name",
-"BF_Council District",
-"BF_Census Tract",
)
#Recoded OBJECTID to begin at 1 instead of 9601 using subtraction.
Wifi <- Wifi %>%
arrange(OBJECTID) %>%
mutate(OBJECTID = (OBJECTID - 9600))
#check to see if Borocode and Borough are the same variable. Since the sum returned as 0, they are equal.
bouroughcodeyes <- ifelse(Wifi$Borough == Wifi$BoroCode, 0, 1)
sum(bouroughcodeyes)
#Removed Borocode due to being same data as Borough
Wifi <- Wifi %>%
select(-BoroCode)
#FOrmatting Activated dates properly using Lubridate
Wifi$Activated <- mdy(Wifi$Activated)
#Also checking if BCT is the same as census tract. This is the same previous check. Since it is the same (sum = 0) I chose to remove it.
censustractcheck <- ifelse(Wifi$`Census Tract` == Wifi$BCTCB2010, 0, 1)
sum(censustractcheck)
Wifi <- Wifi %>%
select(-BCTCB2010)
brooklyn <- Wifi %>%
filter(City != `Borough Name`) %>%
select(City, `Borough Name`, `Neighborhood Tabulation Area Code (NTACODE)`) %>%
filter(`Borough Name` == "Brooklyn")
brooklyn
Staten_Island <- Wifi %>%
filter(City != `Borough Name`) %>%
select(City, `Borough Name`, `Neighborhood Tabulation Area Code (NTACODE)`) %>%
filter(`Borough Name` == "Staten Island")
Staten_Island
Bronx <- Wifi %>%
filter(City != `Borough Name`) %>%
select(City, `Borough Name`, `Neighborhood Tabulation Area Code (NTACODE)`) %>%
filter(`Borough Name` == "Bronx")
Bronx
Manhattan <- Wifi %>%
filter(City != `Borough Name`) %>%
select(City, `Borough Name`, `Neighborhood Tabulation Area (NTA)`, OBJECTID) %>%
filter(`Borough Name` == "Manhattan") %>%
filter(City != "New York")
Manhattan
Wifi$City[Wifi$City == "New York"] <- "Manhattan"
Wifi$City[1278, Wifi$City == "Brooklyn"]
Wifi$City[Wifi$City == "New York"] <- "Manhattan"
Wifi$City[1278, 13] <- "Manhattan"
Wifi[1278, 13] <- "Manhattan"
exp <- Wifi %>%
filter(OBJECTID == 1278)
exp
#Initial packages and loading of original data file using readr.
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lubridate)
library(naniar)
Original.Data <- read_csv("NYC_Wi-Fi_Hotspot_Locations.csv")
Wifi <- Original.Data
#Code used to find variable names and the amount of rows and columns.
colnames(Wifi)
ncol(Wifi)
nrow(Wifi)
#Renaming variable due to spelling error
colnames(Wifi)[21] <- "Council District"
#Creating Data Table of variables and renaming columns
Document.variables <- data.frame(colnames(Wifi), "Definition")
colnames(Document.variables)[1] <- "Variable"
colnames(Document.variables)[2] <- "Definition"
#Recoding definitions per NYC Open Data
Document.variables[1, 2] <- "Identification number automatically generated by map software ArcMap."
Document.variables[2, 2] <- "Borough of New York City. MN = Manhattan BX = Bronx BK = Brooklyn QU = Queens SI = Staten Island."
Document.variables[3, 2] <- "Type of WiFi provided by franchise."
Document.variables[4, 2] <- "Franchise who is providing the Wifi connection."
Document.variables[5, 2] <- "The name of the location where the WiFi is located."
Document.variables[6, 2] <- "A brief description of where the WiFi point is."
Document.variables[7, 2] <- "Points that fall North or South of the Equator, expressed in degrees."
Document.variables[8, 2] <- "Points that fall East or West of the Prime Meridian, expressed in degrees."
Document.variables[9, 2] <- "A horizontal value where a point is located."
Document.variables[10, 2] <- "A vertical value where a point is located."
Document.variables[11, 2] <- "The type of location that a WiFi hotspot is present in."
Document.variables[12, 2] <- "Comments describing a specific hotspot or location."
Document.variables[13, 2] <- "The city in which a hotspot is located."
Document.variables[14, 2] <- "The name of the WiFi seen on people's devices."
Document.variables[15, 2] <- "A LinkNYC Kiosk's unique identification number."
Document.variables[16, 2] <- "The approximated date that this Wi-Fi site went active."
Document.variables[17, 2] <- "The New York City borough where the hotspots are located."
Document.variables[18, 2] <- "The New York City borough where the hotspots are located."
Document.variables[19, 2] <- "Four (4) digit code assigned to neighborhoods to differentiate NYC's five boroughs."
Document.variables[20, 2] <- "Neighborhood identifiers to differentiate NYC's five boroughs."
Document.variables[21, 2] <- "NYC City Council District number."
Document.variables[22, 2] <- "United States Postal Service Zip Code (5-digits)."
Document.variables[23, 2] <- "New York City Borough plus Community Board Numbers."
Document.variables[24, 2] <- "2010 U.S. Census data based on location."
Document.variables[25, 2] <- "Combined value of Borough CD and Census 2010."
Document.variables[26, 2] <- "Building Identification Number."
Document.variables[27, 2] <- "Borough Block Lot."
Document.variables[28, 2] <- "Identification number automatically generated by GIS Developer map sites."
Document.variables[29, 2] <- "Combination of the lat and long values."
#Final paged output
rmarkdown::paged_table(Document.variables)
#Recoding values as NA for several variables
Wifi <- Wifi %>%
naniar::replace_with_na(replace = list(BBL = 0,
Activated = "09/09/9999",
BIN = 0,
Name = 0,
SourceID = 0))
#Binary flags for every variable based on missing data using ifelse statement. A missing (NA) observation will appear as a 1.
Wifi$BF_OBJECTID <- ifelse(is.na(Wifi$OBJECTID) == TRUE, 1, 0)
Wifi$BF_Provider <- ifelse(is.na(Wifi$Provider) == TRUE, 1, 0)
Wifi$BF_Latitude <- ifelse(is.na(Wifi$Latitude) == TRUE, 1, 0)
Wifi$BF_Y <- ifelse(is.na(Wifi$Y) == TRUE, 1, 0)
Wifi$BF_City <- ifelse(is.na(Wifi$City) == TRUE, 1, 0)
Wifi$BF_Activated <- ifelse(is.na(Wifi$Activated) == TRUE, 1, 0)
Wifi$"BF_Neighborhood Tabulation Area Code (NTACODE)" <-
ifelse(is.na(Wifi$"Neighborhood Tabulation Area Code (NTACODE)") == TRUE, 1, 0)
Wifi$BF_Postcode <- ifelse(is.na(Wifi$Postcode) == TRUE, 1, 0)
Wifi$BF_BCTCB2010 <- ifelse(is.na(Wifi$BCTCB2010) == TRUE, 1, 0)
Wifi$BF_DOITT_ID <- ifelse(is.na(Wifi$DOITT_ID) == TRUE, 1, 0)
Wifi$BF_Borough <- ifelse(is.na(Wifi$Borough) == TRUE, 1, 0)
Wifi$BF_Name <- ifelse(is.na(Wifi$Name) == TRUE, 1, 0)
Wifi$BF_Longitude <- ifelse(is.na(Wifi$Longitude) == TRUE, 1, 0)
Wifi$BF_Location_T <- ifelse(is.na(Wifi$Location_T) == TRUE, 1, 0)
Wifi$BF_SSID <- ifelse(is.na(Wifi$SSID) == TRUE, 1, 0)
Wifi$BF_BoroCode <- ifelse(is.na(Wifi$BoroCode) == TRUE, 1, 0)
Wifi$"BF_Neighborhood Tabulation Area (NTA)" <-
ifelse(is.na(Wifi$"Neighborhood Tabulation Area (NTA)") == TRUE, 1, 0)
Wifi$BF_BoroCD <- ifelse(is.na(Wifi$BoroCD) == TRUE, 1, 0)
Wifi$BF_BIN <- ifelse(is.na(Wifi$BIN) == TRUE, 1, 0)
Wifi$"BF_Location (Lat, Long)" <- ifelse(is.na(Wifi$"Location (Lat, Long)") == TRUE, 1, 0)
Wifi$BF_Type <- ifelse(is.na(Wifi$Type) == TRUE, 1, 0)
Wifi$BF_Location <- ifelse(is.na(Wifi$Location) == TRUE, 1, 0)
Wifi$BF_X <- ifelse(is.na(Wifi$X) == TRUE, 1, 0)
Wifi$BF_Remarks <- ifelse(is.na(Wifi$Remarks) == TRUE, 1, 0)
Wifi$BF_SourceID <- ifelse(is.na(Wifi$SourceID) == TRUE, 1, 0)
Wifi$"BF_Borough Name" <- ifelse(is.na(Wifi$"Borough Name") == TRUE, 1, 0)
Wifi$"BF_Council District" <- ifelse(is.na(Wifi$"Council District") == TRUE, 1, 0)
Wifi$"BF_Census Tract" <- ifelse(is.na(Wifi$"Census Tract") == TRUE, 1, 0)
Wifi$BF_BBL <- ifelse(is.na(Wifi$BBL) == TRUE, 1, 0)
#Identifying specific variables with missing data using sums. If the sum is greater than 0 than that row has missing data.
sum(Wifi$BF_OBJECTID)
sum(Wifi$BF_Provider)
sum(Wifi$BF_Latitude)
sum(Wifi$BF_Y)
sum(Wifi$BF_City)
sum(Wifi$BF_Activated)
sum(Wifi$"BF_Neighborhood Tabulation Area Code (NTACODE)")
sum(Wifi$BF_Postcode)
sum(Wifi$BF_BCTCB2010)
sum(Wifi$BF_DOITT_ID)
sum(Wifi$BF_Borough)
sum(Wifi$BF_Name)
sum(Wifi$BF_Longitude)
sum(Wifi$BF_Location_T)
sum(Wifi$BF_SSID)
sum(Wifi$BF_BoroCode)
sum(Wifi$"BF_Neighborhood Tabulation Area (NTA)")
sum(Wifi$BF_BoroCD)
sum(Wifi$BF_BIN)
sum(Wifi$"BF_Location (Lat, Long)")
sum(Wifi$BF_Type)
sum(Wifi$BF_Location)
sum(Wifi$BF_Remarks)
sum(Wifi$BF_X)
sum(Wifi$BF_SourceID)
sum(Wifi$"BF_Borough Name")
sum(Wifi$"BF_Council District")
sum(Wifi$"BF_Census Tract")
sum(Wifi$BF_BBL)
#Removing binary flags for variables with no missing data
Wifi <- Wifi %>%
select(-BF_OBJECTID,
-BF_Provider,
-BF_Latitude,
-BF_Y,
-BF_City,
-"BF_Neighborhood Tabulation Area Code (NTACODE)",
-BF_Postcode,
-BF_BCTCB2010,
-BF_DOITT_ID,
-BF_Borough,
-BF_Longitude,
-BF_Location_T,
-BF_SSID,
-BF_BoroCode,
-"BF_Neighborhood Tabulation Area (NTA)",
-BF_BoroCD,
-"BF_Location (Lat, Long)",
-BF_Type,
-BF_Location,
-BF_X,
-"BF_Borough Name",
-"BF_Council District",
-"BF_Census Tract",
)
#Recoded OBJECTID to begin at 1 instead of 9601 using subtraction.
Wifi <- Wifi %>%
arrange(OBJECTID) %>%
mutate(OBJECTID = (OBJECTID - 9600))
#check to see if Borocode and Borough are the same variable. Since the sum returned as 0, they are equal.
bouroughcodeyes <- ifelse(Wifi$Borough == Wifi$BoroCode, 0, 1)
sum(bouroughcodeyes)
#Removed Borocode due to being same data as Borough
Wifi <- Wifi %>%
select(-BoroCode)
#FOrmatting Activated dates properly using Lubridate
Wifi$Activated <- mdy(Wifi$Activated)
#Also checking if BCT is the same as census tract. This is the same previous check. Since it is the same (sum = 0) I chose to remove it.
censustractcheck <- ifelse(Wifi$`Census Tract` == Wifi$BCTCB2010, 0, 1)
sum(censustractcheck)
Wifi <- Wifi %>%
select(-BCTCB2010)
#No mismatches in the Brooklyn borough
brooklyn <- Wifi %>%
filter(City != `Borough Name`) %>%
select(City, `Borough Name`, `Neighborhood Tabulation Area Code (NTACODE)`) %>%
filter(`Borough Name` == "Brooklyn")
brooklyn
#No mismatches for Staten island borough
Staten_Island <- Wifi %>%
filter(City != `Borough Name`) %>%
select(City, `Borough Name`, `Neighborhood Tabulation Area Code (NTACODE)`) %>%
filter(`Borough Name` == "Staten Island")
Staten_Island
#No mismatches in Bronx borough
Bronx <- Wifi %>%
filter(City != `Borough Name`) %>%
select(City, `Borough Name`, `Neighborhood Tabulation Area Code (NTACODE)`) %>%
filter(`Borough Name` == "Bronx")
Bronx
#There is one where Brooklyn is encoded to Manhattan. Otherwise New York in city is encoded to Manhattan borough.
Manhattan <- Wifi %>%
filter(City != `Borough Name`) %>%
select(City, `Borough Name`, `Neighborhood Tabulation Area (NTA)`, OBJECTID) %>%
filter(`Borough Name` == "Manhattan") %>%
filter(City != "New York")
Manhattan
Wifi$City[Wifi$City == "New York"] <- "Manhattan"
exp <- Wifi %>%
filter(OBJECTID == 1278)
exp
#QUeens has many incorrect values. These values for City are similar to NTA but slightly different. This includes setting Brooklyn or other boroughs within the Queens borough.
queens <- Wifi %>%
filter(City != `Borough Name`) %>%
select(City, `Borough Name`, `Neighborhood Tabulation Area (NTA)`, `Neighborhood Tabulation Area Code (NTACODE)`) %>%
filter(`Borough Name` == "Queens")
queens
View(Manhattan)
Wifi[13, 1278]
Wifi[1278, 13]
Wifi[1263, 13]
Wifi[1263, 13] <- "Manhattan"
exp <- Wifi %>%
filter(OBJECTID == 1278)
exp
Manhattan <- Wifi %>%
filter(City != `Borough Name`) %>%
select(City, `Borough Name`, `Neighborhood Tabulation Area (NTA)`, OBJECTID) %>%
filter(`Borough Name` == "Manhattan") %>%
filter(City != "New York")
Manhattan
queens <- Wifi %>%
filter(City != `Borough Name`) %>%
select(City, `Borough Name`, `Neighborhood Tabulation Area (NTA)`, `Neighborhood Tabulation Area Code (NTACODE)`) %>%
filter(`Borough Name` == "Queens")
queens
View(queens)
#Initial packages and loading of original data file using readr.
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lubridate)
library(naniar)
Original.Data <- read_csv("NYC_Wi-Fi_Hotspot_Locations.csv")
Wifi <- Original.Data
Wifi$Borough <- as.factor(Wifi$Borough)
Wifi$City <- as.factor(Wifi$City)
Wifi$Type <- as.factor(Wifi$Type)
wifi$Provider <- as.factor(wifi$Provider)
#Recoding categorical variables as factors
Wifi$Borough <- as.factor(Wifi$Borough)
Wifi$City <- as.factor(Wifi$City)
Wifi$Type <- as.factor(Wifi$Type)
Wifi$Provider <- as.factor(Wifi$Provider)
