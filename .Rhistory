-BF_Latitude,
-BF_Y,
-BF_City,
-BF_Activated,
-"BF_Neighborhood Tabulation Area Code (NTACODE)",
-BF_Postcode,
-BF_BCTCB2010,
-BF_DOITT_ID,
-BF_Borough,
-BF_Longitude,
-BF_Location_T,
-BF_SSID,
-BF_BoroCode,
-"BF_Neighborhood Tabulation Area (NTA)",
-BF_BoroCD,
-BF_BIN,
-"BF_Location (Lat, Long)",
-BF_Type,
-BF_Location,
-BF_X,
-BF_SourceID,
-"BF_Borough Name",
-"BF_Council District",
-"BF_Census Tract",
-BF_BBL
)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lubridate)
Original.Data <- read_csv("NYC_Wi-Fi_Hotspot_Locations.csv")
Wifi <- Original.Data
colnames(Wifi)
colnames(Wifi)[21] <- "Council District"
Wifi$BF_OBJECTID <- ifelse(is.na(Wifi$OBJECTID) == TRUE, 1, 0)
Wifi$BF_Provider <- ifelse(is.na(Wifi$Provider) == TRUE, 1, 0)
Wifi$BF_Latitude <- ifelse(is.na(Wifi$Latitude) == TRUE, 1, 0)
Wifi$BF_Y <- ifelse(is.na(Wifi$Y) == TRUE, 1, 0)
Wifi$BF_City <- ifelse(is.na(Wifi$City) == TRUE, 1, 0)
Wifi$BF_Activated <- ifelse(is.na(Wifi$Activated) == TRUE, 1, 0)
Wifi$"BF_Neighborhood Tabulation Area Code (NTACODE)" <-
ifelse(is.na(Wifi$"Neighborhood Tabulation Area Code (NTACODE)") == TRUE, 1, 0)
Wifi$BF_Postcode <- ifelse(is.na(Wifi$Postcode) == TRUE, 1, 0)
Wifi$BF_BCTCB2010 <- ifelse(is.na(Wifi$BCTCB2010) == TRUE, 1, 0)
Wifi$BF_DOITT_ID <- ifelse(is.na(Wifi$DOITT_ID) == TRUE, 1, 0)
Wifi$BF_Borough <- ifelse(is.na(Wifi$Borough) == TRUE, 1, 0)
Wifi$BF_Name <- ifelse(is.na(Wifi$Name) == TRUE, 1, 0)
Wifi$BF_Longitude <- ifelse(is.na(Wifi$Longitude) == TRUE, 1, 0)
Wifi$BF_Location_T <- ifelse(is.na(Wifi$Location_T) == TRUE, 1, 0)
Wifi$BF_SSID <- ifelse(is.na(Wifi$SSID) == TRUE, 1, 0)
Wifi$BF_BoroCode <- ifelse(is.na(Wifi$BoroCode) == TRUE, 1, 0)
Wifi$"BF_Neighborhood Tabulation Area (NTA)" <-
ifelse(is.na(Wifi$"Neighborhood Tabulation Area (NTA)") == TRUE, 1, 0)
Wifi$BF_BoroCD <- ifelse(is.na(Wifi$BoroCD) == TRUE, 1, 0)
Wifi$BF_BIN <- ifelse(is.na(Wifi$BIN) == TRUE, 1, 0)
Wifi$"BF_Location (Lat, Long)" <- ifelse(is.na(Wifi$"Location (Lat, Long)") == TRUE, 1, 0)
Wifi$BF_Type <- ifelse(is.na(Wifi$Type) == TRUE, 1, 0)
Wifi$BF_Location <- ifelse(is.na(Wifi$Location) == TRUE, 1, 0)
Wifi$BF_X <- ifelse(is.na(Wifi$X) == TRUE, 1, 0)
Wifi$BF_Remarks <- ifelse(is.na(Wifi$Remarks) == TRUE, 1, 0)
Wifi$BF_SourceID <- ifelse(is.na(Wifi$SourceID) == TRUE, 1, 0)
Wifi$"BF_Borough Name" <- ifelse(is.na(Wifi$"Borough Name") == TRUE, 1, 0)
Wifi$"BF_Council District" <- ifelse(is.na(Wifi$"Council District") == TRUE, 1, 0)
Wifi$"BF_Census Tract" <- ifelse(is.na(Wifi$"Census Tract") == TRUE, 1, 0)
Wifi$BF_BBL <- ifelse(is.na(Wifi$BBL) == TRUE, 1, 0)
sum(Wifi$BF_OBJECTID)
sum(Wifi$BF_Provider)
sum(Wifi$BF_Latitude)
sum(Wifi$BF_Y)
sum(Wifi$BF_City)
sum(Wifi$BF_Activated)
sum(Wifi$"BF_Neighborhood Tabulation Area Code (NTACODE)")
sum(Wifi$BF_Postcode)
sum(Wifi$BF_BCTCB2010)
sum(Wifi$BF_DOITT_ID)
sum(Wifi$BF_Borough)
sum(Wifi$BF_Name)
sum(Wifi$BF_Longitude)
sum(Wifi$BF_Location_T)
sum(Wifi$BF_SSID)
sum(Wifi$BF_BoroCode)
sum(Wifi$"BF_Neighborhood Tabulation Area (NTA)")
sum(Wifi$BF_BoroCD)
sum(Wifi$BF_BIN)
sum(Wifi$"BF_Location (Lat, Long)")
sum(Wifi$BF_Type)
sum(Wifi$BF_Location)
sum(Wifi$BF_Remarks)
sum(Wifi$BF_X)
sum(Wifi$BF_SourceID)
sum(Wifi$"BF_Borough Name")
sum(Wifi$"BF_Council District")
sum(Wifi$"BF_Census Tract")
sum(Wifi$BF_BBL)
Wifi <- Wifi %>%
select(-BF_OBJECTID,
-BF_Provider,
-BF_Latitude,
-BF_Y,
-BF_City,
-BF_Activated,
-"BF_Neighborhood Tabulation Area Code (NTACODE)",
-BF_Postcode,
-BF_BCTCB2010,
-BF_DOITT_ID,
-BF_Borough,
-BF_Longitude,
-BF_Location_T,
-BF_SSID,
-BF_BoroCode,
-"BF_Neighborhood Tabulation Area (NTA)",
-BF_BoroCD,
-BF_BIN,
-"BF_Location (Lat, Long)",
-BF_Type,
-BF_Location,
-BF_X,
-"BF_Borough Name",
-"BF_Council District",
-"BF_Census Tract",
-BF_BBL
)
nrow(Wifi)
attempt <- Wifi %>%
arrange(OBJECTID)
View(attempt)
attempt <- Wifi %>%
arrange(OBJECTID) %>%
mutate(OBJECTID = (OBJECTID - 9600))
bouroughcodeyes <- ifelse(attempt$Borough == attempt$BoroCode, 0, 1)
sum(bouroughcodeyes)
#So since BoroCode and Borough are the same variable I'm just going to remove BoroCode
attempt <- attempt %>%
select(-BoroCode)
#Recoding Borough now as a factor variable
as.factor(attempt$Borough)
sum(bouroughcodeyes)
typeof(attempt$Borough)
#Recoding Borough now as a factor variable
attempt$Borough <- as.factor(attempt$Borough)
typeof(attempt$Borough)
#Recoding Borough now as a factor variable
attempt$Borough <- as.factor(attempt$Borough)
typeof(attempt$Borough)
#Not sure if I should do this, but I wanted to recode the objectid variable to actually start at 1 (instead of 9601)
#Switched to a new dataset here since I'm not actually sure if im doing this right/should keep
attempt <- Wifi %>%
arrange(OBJECTID) %>%
mutate(OBJECTID = (OBJECTID - 9600))
#split up location into street number and street name, binary to check for either
#asfactor borough and
bouroughcodeyes <- ifelse(attempt$Borough == attempt$BoroCode, 0, 1)
sum(bouroughcodeyes)
#So since BoroCode and Borough are the same variable I'm just going to remove BoroCode
attempt <- attempt %>%
select(-BoroCode)
#Recoding Borough now as a factor variable
attempt$Borough <- as.factor(attempt$Borough)
typeof(attempt$Borough)
#Im not understanding here
class(attempt$Borough)
#Not sure if I should do this, but I wanted to recode the objectid variable to actually start at 1 (instead of 9601)
#Switched to a new dataset here since I'm not actually sure if im doing this right/should keep
attempt <- Wifi %>%
arrange(OBJECTID) %>%
mutate(OBJECTID = (OBJECTID - 9600))
#split up location into street number and street name, binary to check for either
#asfactor borough and
bouroughcodeyes <- ifelse(attempt$Borough == attempt$BoroCode, 0, 1)
sum(bouroughcodeyes)
#So since BoroCode and Borough are the same variable I'm just going to remove BoroCode
attempt <- attempt %>%
select(-BoroCode)
#Recoding Borough now as a factor variable
attempt$Borough <- as.factor(attempt$Borough)
class(attempt$Borough)
#Im not understanding here why if i try to make it a factor it comes back as an integer
Manhattan <- attempt %>%
filter(City == "New York")
View(Manhattan)
Manhattan$BFCityBorough <- ifelse(Manhattan$City == Manhattan$Borough, 1, 0)
sum(Manhattan$BFCityBorough)
Manhattan <- attempt
Manhattan <- attempt %>%
filter(City == "New York") %>%
mutate(City <- rownames(City) = "Manhattan")
Manhattan <- attempt %>%
filter(City == "New York") %>%
mutate(rownames(City) = "Manhattan")
Manhattan <- attempt %>%
filter(City == "New York") %>%
mutate(rownames(City) <- "Manhattan")
Manhattan <- attempt %>%
filter(City == "New York")
Manhattan$BFCityBorough <- ifelse(Manhattan$City == Manhattan$Borough, 1, 0)
sum(Manhattan$BFCityBorough)
othercity <- attempt %>%
select(City) %>%
filter(City != "New York")
othercity$BFCityBorough <- ifelse(othercity$City == othercity$Borough, 1, 0)
othercity <- attempt %>%
select(City, Borough) %>%
filter(City != "New York")
othercity$BFCityBorough <- ifelse(othercity$City == othercity$Borough, 1, 0)
sum(othercity$BFCityBorough)
attempt <- attempt %>%
select(-City)
attempt$Activated <- mdy(attempt$Activated)
attempt$Activated
#Also checking if BCT is the same as census tract
censustractcheck <- ifelse(attempt$`Census Tract` == attempt$BCTCB2010, 1, 0)
sum(censustractcheck)
sum(othercity$BFCityBorough)
View(othercity)
othercity$BFCityBorough <- ifelse(othercity$City == othercity$"Borough Name", 1, 0)
Manhattan$BFCityBorough <- ifelse(Manhattan$City == Manhattan$"Borough Name", 1, 0)
sum(Manhattan$BFCityBorough)
View(Manhattan)
Manhattan <- attempt %>%
filter(City == "New York") %>%
select(City, `Borough Name`)
attempt <- Wifi %>%
arrange(OBJECTID) %>%
mutate(OBJECTID = (OBJECTID - 9600))
bouroughcodeyes <- ifelse(attempt$Borough == attempt$BoroCode, 0, 1)
sum(bouroughcodeyes)
#So since BoroCode and Borough are the same variable I'm just going to remove BoroCode
attempt <- attempt %>%
select(-BoroCode)
#Recoding Borough now as a factor variable
attempt$Borough <- as.factor(attempt$Borough)
class(attempt$Borough)
Manhattan <- attempt %>%
filter(City == "New York") %>%
select(City, `Borough Name`)
Manhattan$BFCityBorough <- ifelse(Manhattan$City == Manhattan$"Borough Name", 1, 0)
sum(Manhattan$BFCityBorough)
othercity <- attempt %>%
select(City, `Borough Name`) %>%
filter(City != "New York")
othercity$BFCityBorough <- ifelse(othercity$City == othercity$`Borough Name`, 1, 0)
othercity$BFCityBorough <- ifelse(othercity$City == othercity$`Borough Name`, 0, 1)
sum(othercity$BFCityBorough)
othercity <- othercity %>%
filter(BFCityBorough == 1)
View(attempt)
#Also checking if BCT is the same as census tract
censustractcheck <- ifelse(attempt$`Census Tract` == attempt$BCTCB2010, 0, 1)
sum(censustractcheck)
attempt <- attempt %>%
select(-BCTCB2010)
experiment <- attempt %>%
filter(City == "New York") %>%
mutate(nrow(City) == "Manhattan")
experiment <- attempt %>%
filter(City == "New York") %>%
mutate(nrow(City) = "Manhattan")
experiment <- attempt %>%
filter(City == "New York") %>%
mutate(rownames(City) = "Manhattan")
experiment <- attempt %>%
filter(City == "New York") %>%
mutate(rownames(City) == "Manhattan")
experiment <- attempt %>%
filter(City == "New York") %>%
mutate(City, "Manhattan" = "New York")
View(experiment)
experiment <- attempt %>%
filter(City == "New York") %>%
mutate(City, "New York" = "Manhattan")
experiment <- attempt
experiment <- attempt
experiment$City[experiment$City == "New York"] <- "Manhattan"
View(experiment)
attempt$City[attemp$City == "New York"] <- "Manhattan"
attempt$City[attempt$City == "New York"] <- "Manhattan"
attempt$Activated <- mdy(attempt$Activated)
#Also checking if BCT is the same as census tract
censustractcheck <- ifelse(attempt$`Census Tract` == attempt$BCTCB2010, 0, 1)
sum(censustractcheck)
#Also checking if BCT is the same as census tract
censustractcheck <- ifelse(attempt$`Census Tract` == attempt$BCTCB2010, 0, 1)
View(attempt)
attempt$`Mailing Address` <- str_c(attempt$Location,
attempt$City,
"New York",
attempt$Postcode)
attempt$`Mailing Address` <- str_c(attempt$Location,
attempt$City,
"New York",
attempt$Postcode,
sep = ", ")
#Now I can separate out the street number and street address
address <- str_split(attempt$Location, pattern = " ", n = 2, simplify = TRUE)
address
sum(censustractcheck)
attempt$Free <- ifelse(attempt$Type == "Free", 1, 0)
View(attempt)
attempt <- as.factor(attempt$`Borough Name`)
attempt <- as.factor(attempt$City)
attempt$City
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lubridate)
Original.Data <- read_csv("NYC_Wi-Fi_Hotspot_Locations.csv")
Wifi <- Original.Data
Original.Data <- read_csv("NYC_Wi-Fi_Hotspot_Locations.csv")
Wifi <- Original.Data
colnames(Wifi)
colnames(Wifi)[21] <- "Council District"
#Binary flags for every variable based on missing data
Wifi$BF_OBJECTID <- ifelse(is.na(Wifi$OBJECTID) == TRUE, 1, 0)
Wifi$BF_Provider <- ifelse(is.na(Wifi$Provider) == TRUE, 1, 0)
Wifi$BF_Latitude <- ifelse(is.na(Wifi$Latitude) == TRUE, 1, 0)
Wifi$BF_Y <- ifelse(is.na(Wifi$Y) == TRUE, 1, 0)
Wifi$BF_City <- ifelse(is.na(Wifi$City) == TRUE, 1, 0)
Wifi$BF_Activated <- ifelse(is.na(Wifi$Activated) == TRUE, 1, 0)
Wifi$"BF_Neighborhood Tabulation Area Code (NTACODE)" <-
ifelse(is.na(Wifi$"Neighborhood Tabulation Area Code (NTACODE)") == TRUE, 1, 0)
Wifi$BF_BCTCB2010 <- ifelse(is.na(Wifi$BCTCB2010) == TRUE, 1, 0)
Wifi$BF_BCTCB2010 <- ifelse(is.na(Wifi$BCTCB2010) == TRUE, 1, 0)
Wifi$BF_DOITT_ID <- ifelse(is.na(Wifi$DOITT_ID) == TRUE, 1, 0)
Wifi$BF_Name <- ifelse(is.na(Wifi$Name) == TRUE, 1, 0)
Wifi$BF_Location_T <- ifelse(is.na(Wifi$Location_T) == TRUE, 1, 0)
Wifi$BF_BoroCode <- ifelse(is.na(Wifi$BoroCode) == TRUE, 1, 0)
Wifi$"BF_Neighborhood Tabulation Area (NTA)" <-
ifelse(is.na(Wifi$"Neighborhood Tabulation Area (NTA)") == TRUE, 1, 0)
Wifi$BF_BoroCD <- ifelse(is.na(Wifi$BoroCD) == TRUE, 1, 0)
Wifi$BF_BIN <- ifelse(is.na(Wifi$BIN) == TRUE, 1, 0)
Wifi$"BF_Location (Lat, Long)" <- ifelse(is.na(Wifi$"Location (Lat, Long)") == TRUE, 1, 0)
Wifi$BF_Type <- ifelse(is.na(Wifi$Type) == TRUE, 1, 0)
Wifi$BF_Location <- ifelse(is.na(Wifi$Location) == TRUE, 1, 0)
Wifi$BF_X <- ifelse(is.na(Wifi$X) == TRUE, 1, 0)
Wifi$BF_Remarks <- ifelse(is.na(Wifi$Remarks) == TRUE, 1, 0)
Wifi$BF_SourceID <- ifelse(is.na(Wifi$SourceID) == TRUE, 1, 0)
Wifi$"BF_Borough Name" <- ifelse(is.na(Wifi$"Borough Name") == TRUE, 1, 0)
Wifi$"BF_Council District" <- ifelse(is.na(Wifi$"Council District") == TRUE, 1, 0)
Wifi$"BF_Census Tract" <- ifelse(is.na(Wifi$"Census Tract") == TRUE, 1, 0)
Wifi$BF_BBL <- ifelse(is.na(Wifi$BBL) == TRUE, 1, 0)
#Binary flags for every variable based on missing data
Wifi$BF_OBJECTID <- ifelse(is.na(Wifi$OBJECTID) == TRUE, 1, 0)
Wifi$BF_Provider <- ifelse(is.na(Wifi$Provider) == TRUE, 1, 0)
Wifi$BF_Latitude <- ifelse(is.na(Wifi$Latitude) == TRUE, 1, 0)
Wifi$BF_Y <- ifelse(is.na(Wifi$Y) == TRUE, 1, 0)
Wifi$BF_City <- ifelse(is.na(Wifi$City) == TRUE, 1, 0)
Wifi$BF_Activated <- ifelse(is.na(Wifi$Activated) == TRUE, 1, 0)
Wifi$"BF_Neighborhood Tabulation Area Code (NTACODE)" <-
ifelse(is.na(Wifi$"Neighborhood Tabulation Area Code (NTACODE)") == TRUE, 1, 0)
Wifi$BF_Postcode <- ifelse(is.na(Wifi$Postcode) == TRUE, 1, 0)
Wifi$BF_BCTCB2010 <- ifelse(is.na(Wifi$BCTCB2010) == TRUE, 1, 0)
Wifi$BF_DOITT_ID <- ifelse(is.na(Wifi$DOITT_ID) == TRUE, 1, 0)
Wifi$BF_Borough <- ifelse(is.na(Wifi$Borough) == TRUE, 1, 0)
Wifi$BF_Name <- ifelse(is.na(Wifi$Name) == TRUE, 1, 0)
Wifi$BF_Longitude <- ifelse(is.na(Wifi$Longitude) == TRUE, 1, 0)
Wifi$BF_Location_T <- ifelse(is.na(Wifi$Location_T) == TRUE, 1, 0)
Wifi$BF_SSID <- ifelse(is.na(Wifi$SSID) == TRUE, 1, 0)
Wifi$BF_BoroCode <- ifelse(is.na(Wifi$BoroCode) == TRUE, 1, 0)
Wifi$"BF_Neighborhood Tabulation Area (NTA)" <-
ifelse(is.na(Wifi$"Neighborhood Tabulation Area (NTA)") == TRUE, 1, 0)
Wifi$BF_BoroCD <- ifelse(is.na(Wifi$BoroCD) == TRUE, 1, 0)
Wifi$BF_BIN <- ifelse(is.na(Wifi$BIN) == TRUE, 1, 0)
Wifi$"BF_Location (Lat, Long)" <- ifelse(is.na(Wifi$"Location (Lat, Long)") == TRUE, 1, 0)
Wifi$BF_Type <- ifelse(is.na(Wifi$Type) == TRUE, 1, 0)
Wifi$BF_Location <- ifelse(is.na(Wifi$Location) == TRUE, 1, 0)
Wifi$BF_X <- ifelse(is.na(Wifi$X) == TRUE, 1, 0)
Wifi$BF_Remarks <- ifelse(is.na(Wifi$Remarks) == TRUE, 1, 0)
Wifi$BF_SourceID <- ifelse(is.na(Wifi$SourceID) == TRUE, 1, 0)
Wifi$"BF_Borough Name" <- ifelse(is.na(Wifi$"Borough Name") == TRUE, 1, 0)
Wifi$"BF_Council District" <- ifelse(is.na(Wifi$"Council District") == TRUE, 1, 0)
Wifi$"BF_Census Tract" <- ifelse(is.na(Wifi$"Census Tract") == TRUE, 1, 0)
Wifi$BF_BBL <- ifelse(is.na(Wifi$BBL) == TRUE, 1, 0)
Of the 29 variables, only `Name`, `Remarks`, and `SourceID` contain missing data. These variables all have several hundred missing observations, so it would not be suitable to drop them. I then removed the unnecessary flags.
```{r echo = FALSE, include = FALSE}
sum(Wifi$BF_OBJECTID)
sum(Wifi$BF_Provider)
sum(Wifi$BF_Latitude)
sum(Wifi$BF_City)
sum(Wifi$BF_City)
sum(Wifi$BF_Activated)
sum(Wifi$BF_City)
sum(Wifi$BF_Activated)
sum(Wifi$"BF_Neighborhood Tabulation Area Code (NTACODE)")
sum(Wifi$BF_Activated)
sum(Wifi$"BF_Neighborhood Tabulation Area Code (NTACODE)")
sum(Wifi$BF_Postcode)
sum(Wifi$BF_BCTCB2010)
sum(Wifi$BF_BCTCB2010)
sum(Wifi$BF_DOITT_ID)
sum(Wifi$BF_DOITT_ID)
sum(Wifi$BF_Borough)
sum(Wifi$BF_Borough)
sum(Wifi$BF_Name)
sum(Wifi$BF_Name)
sum(Wifi$BF_Longitude)
sum(Wifi$BF_Longitude)
sum(Wifi$BF_Location_T)
sum(Wifi$BF_Location_T)
sum(Wifi$BF_SSID)
sum(Wifi$BF_SSID)
sum(Wifi$BF_BoroCode)
sum(Wifi$BF_BoroCode)
sum(Wifi$"BF_Neighborhood Tabulation Area (NTA)")
sum(Wifi$BF_BoroCD)
sum(Wifi$"BF_Neighborhood Tabulation Area (NTA)")
sum(Wifi$BF_BoroCD)
sum(Wifi$BF_BIN)
sum(Wifi$BF_Location_T)
sum(Wifi$BF_SSID)
sum(Wifi$BF_BoroCode)
sum(Wifi$"BF_Neighborhood Tabulation Area (NTA)")
sum(Wifi$BF_BoroCD)
sum(Wifi$BF_BIN)
sum(Wifi$"BF_Location (Lat, Long)")
sum(Wifi$BF_Longitude)
sum(Wifi$BF_Location_T)
sum(Wifi$BF_SSID)
sum(Wifi$BF_BoroCode)
sum(Wifi$"BF_Neighborhood Tabulation Area (NTA)")
sum(Wifi$BF_BoroCD)
sum(Wifi$BF_BIN)
sum(Wifi$"BF_Location (Lat, Long)")
sum(Wifi$BF_Type)
sum(Wifi$BF_BoroCD)
sum(Wifi$BF_BIN)
sum(Wifi$"BF_Location (Lat, Long)")
sum(Wifi$BF_Type)
sum(Wifi$BF_Location)
sum(Wifi$BF_BoroCD)
sum(Wifi$BF_BIN)
sum(Wifi$"BF_Location (Lat, Long)")
sum(Wifi$BF_Type)
sum(Wifi$BF_Location)
sum(Wifi$BF_Remarks)
sum(Wifi$BF_BIN)
sum(Wifi$"BF_Location (Lat, Long)")
sum(Wifi$BF_Type)
sum(Wifi$BF_Location)
sum(Wifi$BF_Remarks)
sum(Wifi$BF_X)
sum(Wifi$"BF_Location (Lat, Long)")
sum(Wifi$BF_Type)
sum(Wifi$BF_Location)
sum(Wifi$BF_Remarks)
sum(Wifi$BF_X)
sum(Wifi$BF_SourceID)
sum(Wifi$BF_Location)
sum(Wifi$BF_Remarks)
sum(Wifi$BF_X)
sum(Wifi$BF_SourceID)
sum(Wifi$"BF_Borough Name")
sum(Wifi$BF_Location)
sum(Wifi$BF_Remarks)
sum(Wifi$BF_X)
sum(Wifi$BF_SourceID)
sum(Wifi$"BF_Borough Name")
sum(Wifi$"BF_Council District")
sum(Wifi$BF_Remarks)
sum(Wifi$BF_X)
sum(Wifi$BF_SourceID)
sum(Wifi$"BF_Borough Name")
sum(Wifi$"BF_Council District")
sum(Wifi$"BF_Census Tract")
#Removing binary flags for variables with no missing data
Wifi <- Wifi %>%
select(-BF_OBJECTID,
-BF_Provider,
-BF_Latitude,
-BF_Y,
-BF_City,
-BF_Activated,
-"BF_Neighborhood Tabulation Area Code (NTACODE)",
-BF_Postcode,
-BF_BCTCB2010,
-BF_DOITT_ID,
-BF_Borough,
-BF_Longitude,
-BF_Location_T,
-BF_SSID,
-BF_BoroCode,
-"BF_Neighborhood Tabulation Area (NTA)",
-BF_BoroCD,
-BF_BIN,
-"BF_Location (Lat, Long)",
-BF_Type,
-BF_Location,
-BF_X,
-"BF_Borough Name",
-"BF_Council District",
-"BF_Census Tract",
-BF_BBL
)
attempt <- Wifi %>%
arrange(OBJECTID) %>%
mutate(OBJECTID = (OBJECTID - 9600))
bouroughcodeyes <- ifelse(attempt$Borough == attempt$BoroCode, 0, 1)
sum(bouroughcodeyes)
#So since BoroCode and Borough are the same variable I'm just going to remove BoroCode
attempt <- attempt %>%
select(-BoroCode)
attempt$Borough <- as.factor(attempt$Borough)
class(attempt$Borough)
attempt$City[attempt$City == "New York"] <- "Manhattan"
attempt$Activated <- mdy(attempt$Activated)
#Also checking if BCT is the same as census tract
censustractcheck <- ifelse(attempt$`Census Tract` == attempt$BCTCB2010, 0, 1)
sum(censustractcheck)
attempt <- attempt %>%
select(-BCTCB2010)
```{r}
attempt$`Borough Name` <- as.factor(attempt$`Borough Name`)
attempt$City <- as.factor(attempt$City)
attempt$Borough
attempt$Type <- as.factor(attempt$Type)
